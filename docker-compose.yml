version: "3.5"
services:

  cabcontext:
    container_name: cab_context
    image: cab/cabcontext
    build:
      context: backend
      dockerfile: Context-Service-Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db_postgres_context:5432/cab-context
      - HOST_IP=$HOST_IP
    restart: unless-stopped
    command: sh -c "./entrypoint.sh"
    ports:
      - 5100:5000
    volumes:
      - ./backend/context-service:/code
    networks:
      - cab-docker_default
    depends_on:
      - frontend
  
  cabevent:
    image: cab/cabevent
    build:
      context: backend/event-service
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - CARDS_PUBLICATION_SERVICE=http://cards-publication:8080
      - GATEWAY_SERVICE=http://angular-ui:80
      - HISTORIC_SERVICE=http://cabhistoric:5000
      - DATABASE_URL=postgresql://postgres:postgres@db_postgres_event:5432/cab-event
    command: sh -c "./entrypoint.sh"
    ports:
      - 5000:5000
    volumes:
      - ./backend/event-service:/code
    networks:
      - cab-docker_default
    depends_on:
      - db_postgres_event

  cabhistoric:
    container_name: cabhistoric
    image: cab/cabhistoric
    build:
      context: backend/historic-service
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db_postgres_historic:5432/cab-historic
    restart: unless-stopped
    command: sh -c "./entrypoint.sh"
    ports:
      - 5200:5000
    volumes:
      - ./backend/historic-service:/code
    networks:
      - cab-docker_default
    depends_on:
      - db_postgres_historic

  db_postgres_context:
    container_name: db_postgres_context
    image: postgres:latest
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cab-context
    ports:
      - "5434:5432"
    volumes:
      - postgres_context_data:/var/lib/postgresql/data/
    networks:
      - cab-docker_default

  db_postgres_event:
    container_name: db_postgres_event
    image: postgres:latest
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cab-event
    ports:
      - "5432:5432"
    volumes:
      - postgres_event_data:/var/lib/postgresql/data/
    networks:
      - cab-docker_default

  db_postgres_historic:
    container_name: db_postgres_historic
    image: postgres:latest
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cab-historic
    ports:
      - "5433:5432"
    volumes:
      - postgres_historic_data:/var/lib/postgresql/data/
    networks:
      - cab-docker_default

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - cab-docker_default
    restart: unless-stopped

  frontend:
    container_name: frontend
    build:
      context: ./frontend/main
      dockerfile: Dockerfile
    volumes:
      - "./ui-config:/usr/share/nginx/html/opfab"
      - "./nginx-cors-permissive.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - "3200:80"
    networks:
      - cab-docker_default

networks:
  cab-docker_default:
    external: true

volumes:
  postgres_context_data:
  postgres_event_data:
  postgres_historic_data:
  pgadmin:
