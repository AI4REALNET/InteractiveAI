
management:
  endpoints:
    web:
      exposure:
        include: '*'
spring:
  rabbitmq:
    host: rabbitmq.cab-dev.svc.cluster.local
    port: 5672
    username: guest
    password: guest
  security:
    provider-url: https://cab-keycloak.irtsystemx.org/auth
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${spring.security.provider-url}/realms/dev/protocol/openid-connect/certs
  data:
    mongodb:
      database: operator-fabric
      uri: mongodb://root:password@mongodb.cab-dev.svc.cluster.local:27017/operator-fabric?authSource=admin&authMode=scram-sha1

server:
  forward-headers-strategy: framework

operatorfabric:
  servicesUrls:
    users: "http://users.cab-dev.svc.cluster.local:8080"
    businessconfig: "http://businessconfig.cab-dev.svc.cluster.local:8080"

### activate the following if you want to the groups or entities to come from the token and not mongo DB
#  security:
#    jwt:

### activate the folLowing if you want the entities of the user to come from the token and not mongoDB
### entitiesIdClaim is the name of the field in the token     
#      entitiesIdClaim : entitiesId
#      gettingEntitiesFromToken: true
###

### activate the following if you want the groups of the user to come from the token and not mongoDB
#      groups: 
#        mode: JWT
#        rolesClaim:
#          rolesClaimStandard:
#            - path: "ATTR1"
#            - path: "ATTR2"            
#          rolesClaimStandardArray:  
#            - path: "resource_access/opfab-client/roles"
#          rolesClaimStandardList:  
#            - path: "groups" 
#              separator: ";"           
#          rolesClaimCheckExistPath: 
#            - path: "resource_access/AAA" 
#              roleValue: "roleAAA"      
#            - path: "resource_access/BBB"
#              roleValue: "roleBBB"  
### 
