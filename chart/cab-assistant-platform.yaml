version: "3.8"
services:

  cab-context:
    image: ${CAB_CONTEXT_IMAGE_WITH_TAG}
    environment:
      - CORRELATION_SERVICE=http://cab-correlation.cab-dev.svc.cluster.local:5000
      - DATABASE_URL=postgresql://postgres:postgres@db-postgres-context.cab-dev.svc.cluster.local:5432/cab-context
      - FLASK_APP=app:create_app('dev')
      - PYTHONPATH=/code
      - FLASK_ENV=development
      - URL_INTROSPECT="http://web-ui.cab-dev.svc.cluster.local:80/auth/check_token"
      - KEYCLOAK_SERVER_URL="http://web-ui.cab-dev.svc.cluster.local:80/auth/"
    restart: unless-stopped
    command: python -m flask run --host=0.0.0.0 --reload
    ports:
      - 5000
    depends_on:
      - db-postgres-context
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.2"
          memory: 256M
    labels:
      kompose.image-pull-secret: "regcred"
      kompose.image-pull-policy: "Always"

  cab-event:
    image: ${CAB_EVENT_IMAGE_WITH_TAG}
    restart: unless-stopped
    environment:
      - CARDS_PUBLICATION_SERVICE=http://cards-publication.cab-dev.svc.cluster.local:8080
      - GATEWAY_SERVICE=http://web-ui.cab-dev.svc.cluster.local:80
      - HISTORIC_SERVICE=http://cab-historic.cab-dev.svc.cluster.local:5000
      - DATABASE_URL=postgresql://postgres:postgres@db-postgres-event.cab-dev.svc.cluster.local:5432/cab-event
      - FLASK_APP=app:create_app('dev')
      - PYTHONPATH=/code
      - FLASK_ENV=development
      - URL_INTROSPECT="http://web-ui.cab-dev.svc.cluster.local:80/auth/check_token"
      - KEYCLOAK_SERVER_URL="http://web-ui.cab-dev.svc.cluster.local:80/auth/"
    command: python -m flask run --host=0.0.0.0 --reload
    ports:
      - 5000
    depends_on:
      - db-postgres-event
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.2"
          memory: 256M
    labels:
      kompose.image-pull-secret: "regcred"
      kompose.image-pull-policy: "Always"

  cab-historic:
    image: ${CAB_HISTORIC_IMAGE_WITH_TAG}
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db-postgres-historic.cab-dev.svc.cluster.local:5432/cab-historic
      # - FLASK_APP=app:create_app('dev')
      # - FLASK_ENV=development
      - URL_INTROSPECT="http://web-ui.cab-dev.svc.cluster.local:80/auth/check_token"
      - KEYCLOAK_SERVER_URL="http://web-ui.cab-dev.svc.cluster.local:80/auth/"
    restart: unless-stopped
    command: python -m flask run --host=0.0.0.0 --reload
    ports:
      - 5000
    depends_on:
      - db-postgres-historic
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.2"
          memory: 256M
    labels:
      kompose.image-pull-secret: "regcred"
      kompose.image-pull-policy: "Always"

  db-postgres-context:
    image: postgres:14.7
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cab-context
    ports:
      - 5432
    volumes:
      - postgres_context_data:/var/lib/postgresql/data/
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: 100M
        reservations:
          cpus: "0.1"
          memory: 50M
    labels:
      kompose.volume.subpath: pg-data
      kompose.controller.type: statefulset

  db-postgres-event:
    image: postgres:14.7
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cab-event
    ports:
      - 5432
    volumes:
      - postgres_event_data:/var/lib/postgresql/data/
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: 100M
        reservations:
          cpus: "0.1"
          memory: 50M
    labels:
      kompose.volume.subpath: pg-data
      kompose.controller.type: statefulset

  db-postgres-historic:
    image: postgres:14.7
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cab-historic
    ports:
      - 5432
    volumes:
      - postgres_historic_data:/var/lib/postgresql/data/
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: 100M
        reservations:
          cpus: "0.1"
          memory: 50M
    labels:
      kompose.volume.subpath: pg-data
      kompose.controller.type: statefulset

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - 80
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: 512M
        reservations:
          cpus: "0.05"
          memory: 256M
    labels:
      kompose.volume.subpath: pg-data

  frontend:
    image: ${CAB_FRONTEND_IMAGE_WITH_TAG}
    restart: unless-stopped
    configs:
      - source: cab-ui-config-web-ui
        target: /usr/share/nginx/html/opfab/web-ui.json
      - source: cab-ui-config-ui-menu
        target: /usr/share/nginx/html/opfab/ui-menu.json
      - source: cab-nginx-conf-nginx
        target: /etc/nginx/conf.d/default.conf
    ports:
      - 80
    depends_on:
      - cab-correlation
      - cab-recommendation
      - cab-event
      - cab-context
      - cab-historic
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: 100M
        reservations:
          cpus: "0.05"
          memory: 50M
    labels:
      kompose.image-pull-secret: "regcred"
      kompose.image-pull-policy: "Always"

  cab-correlation:
    image: ${CAB_CORRELATION_IMAGE_WITH_TAG}
    restart: unless-stopped
    environment:
      - CARDS_PUBLICATION_SERVICE=http://cards-publication.cab-dev.svc.cluster.local:8080
      - GATEWAY_SERVICE=http://web-ui.cab-dev.svc.cluster.local:80
      - HISTORIC_SERVICE=http://cab-historic.cab-dev.svc.cluster.local:5000
      - DATABASE_URL=postgresql://postgres:postgres@db-postgres-correlation.cab-dev.svc.cluster.local:5432/cab-correlation
      - PYTHONPATH=/code
      - FLASK_APP=app:create_app('dev')
      - FLASK_ENV=development
      - URL_INTROSPECT="http://web-ui.cab-dev.svc.cluster.local:80/auth/check_token"
      - KEYCLOAK_SERVER_URL="http://web-ui.cab-dev.svc.cluster.local:80/auth/"
    command: python -m flask run --host=0.0.0.0 --reload
    ports:
      - 5000
    depends_on:
      - db-postgres-correlation
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 2048M
        reservations:
          cpus: "0.2"
          memory: 1024M
    labels:
      kompose.image-pull-secret: "regcred"
      kompose.image-pull-policy: "Always"

  db-postgres-correlation:
    image: postgres:14.7
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cab-correlation
    ports:
      - 5432
    volumes:
      - postgres_correlation_data:/var/lib/postgresql/data/
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: 100M
        reservations:
          cpus: "0.1"
          memory: 50M
    labels:
      kompose.volume.subpath: pg-data
      kompose.controller.type: statefulset

  cab-recommendation:
    image: ${CAB_RECOMMENDATION_IMAGE_WITH_TAG}
    restart: unless-stopped
    environment:
      - GATEWAY_SERVICE=http://web-ui.cab-dev.svc.cluster.local:80
      - FLASK_APP=app:create_app('dev')
      - FLASK_ENV=development
      - PYTHONPATH=/my_app
      - URL_INTROSPECT="http://web-ui.cab-dev.svc.cluster.local:80/auth/check_token"
      - KEYCLOAK_SERVER_URL="http://web-ui.cab-dev.svc.cluster.local:80/auth/"
    command: python -m flask run --host=0.0.0.0 --reload
    ports:
      - 5000
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: 2048M
        reservations:
          cpus: "0.3"
          memory: 1024M
    labels:
      kompose.image-pull-secret: "regcred"
      kompose.image-pull-policy: "Always"

volumes:
  postgres_context_data:
  postgres_event_data:
  postgres_historic_data:
  postgres_correlation_data:
  pgadmin:


configs:
  cab-ui-config-web-ui:
    file: ../ui-config/web-ui-kubernetes.json
  cab-ui-config-ui-menu:
    file: ../ui-config/ui-menu-kubernetes.json
  cab-nginx-conf-nginx:
    file: ../config/dev/cab/nginx-kubernetes.conf
